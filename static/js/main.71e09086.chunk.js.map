{"version":3,"sources":["components/Excel.js","App.js","reportWebVitals.js","index.js"],"names":["Excel","state","rows","cols","fileHandler","event","fileObj","target","files","ExcelRenderer","err","resp","console","log","setState","className","type","onChange","this","bind","style","data","columns","tableClassName","tableHeaderRowClass","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIaA,EAAb,4MAEIC,MAAQ,CACJC,KAAK,GACLC,KAAM,IAJd,EAOIC,YAAc,SAACC,GACX,IAAIC,EAAUD,EAAME,OAAOC,MAAM,GAEjCC,wBAAcH,GAAS,SAACI,EAAKC,GACtBD,EACCE,QAAQC,IAAIH,GAGZ,EAAKI,SAAS,CACVX,KAAMQ,EAAKR,KACXD,KAAMS,EAAKT,WAjB/B,4CAuBE,WAEA,OACE,gCAEA,uBAAOa,UAAU,OAAOC,KAAK,OAAOC,SAAUC,KAAKd,YAAYe,KAAKD,MAAOE,MAAO,CAAC,QAAW,UAC9F,8BACKF,KAAKjB,MAAMC,MAAQ,cAAC,WAAD,CAAUmB,KAAMH,KAAKjB,MAAMC,KAAMoB,QAASJ,KAAKjB,MAAME,KAAMoB,eAAe,iBAAiBC,oBAAoB,qBA9B3I,GAA2BC,IAAMC,WAsClB1B,I,OChCA2B,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCOSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.71e09086.chunk.js","sourcesContent":["import { render } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport {OutTable, ExcelRenderer} from \"react-excel-renderer\";\r\n\r\nexport class Excel extends React.Component {\r\n\r\n    state = {\r\n        rows:\"\",\r\n        cols: \"\"\r\n    }\r\n\r\n    fileHandler = (event) =>{\r\n        let fileObj = event.target.files[0];\r\n\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            else{\r\n                this.setState({\r\n                    cols: resp.cols,\r\n                    rows: resp.rows\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n  render(){\r\n\r\n  return (\r\n    <div >\r\n\r\n    <input className=\"div1\" type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\": \"20px\"}}/>\r\n    <div>\r\n        {this.state.rows && <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />}\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Excel;","import Excel from \"./components/Excel\";\r\nimport './App.css'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Excel/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}